<%@ Control Language="C#" Inherits="System.Web.Mvc.ViewUserControl<SFSdotNet.Framework.Web.Mvc.Models.SimplePagedListModel>" %>

<%="<script type='text/javascript'>" %>
    var _results<%=Model.IdTab %> = null;
    var _totalResults = 0;
    var _propertyKeyName<%=Model.IdTab %>  = null;
    
    <%  string usemode = "";
        if (!string.IsNullOrEmpty(Request.QueryString["usemode"])){
            usemode = "&usemode=" + Request.QueryString["usemode"];
        }

        string fk = "";
        if (!string.IsNullOrEmpty(Request.QueryString["fk"]))
        {
            fk = "&fk=" + Request.QueryString["fk"];
        }
        string overrideModule = "";
        if (!string.IsNullOrEmpty(Request.QueryString["overrideModule"]))
        {
            overrideModule = "&overrideModule=" + Request.QueryString["overrideModule"];
        }

      
        
        if (!string.IsNullOrEmpty(Model.JsonUrlGetData)) { %>
    function getResults<%=Model.IdTab %>(filter, page, pagesize, orderby, orderdir) {
        //alert('<%= Model.JsonUrlGetData %>?filter=' + filter + '&page=' + page + '&pageSize=' + pagesize + '&orderBy=' + orderby  + '&orderDir=' + orderdir);
        var extraWithModel = "";
        if (typeof(extraParamsList<%=Model.IdTab %>) != "undefined" && extraParamsList<%=Model.IdTab %>.length > 0){
            extraWithModel = "&params=" + extraParamsList<%=Model.IdTab %>;
        }
        <%--if (viewen_extern_int_<%=Model.IdTab %>){
            extraWithModel = "&wm=1&";
        }--%>
        $.ajax({ url: _urlGet<%=Model.IdTab %> + '?filter=' + filter + '&page=' + page + '&pageSize=' + pagesize + '&orderBy=' + orderby  + '&orderDir=' + orderdir + extraWithModel + '<%=usemode %><%= fk %><%= overrideModule %>',
            success: function (data) {
            //if (viewen_extern_int_<%=Model.IdTab %>){
             //   changeListLayout($("#tableSearchresult<%=Model.IdTab %>"), data);
             //   _results<%=Model.IdTab %> = data.Data;
            //}else{
                _results<%=Model.IdTab %> = data;
            //}
                
            listResults<%=Model.IdTab %>(_results<%=Model.IdTab %>);
            addIntegratedSettingData<%=Model.IdTab %>();
            },
            cache:false,
            dataType: 'json',
            async: true 
        })


    }
    <%  }else if (!string.IsNullOrEmpty(Model.UrlGetData)){ %>
     function getResults<%=Model.IdTab %>(url, filter, page, pagesize, extra) {
        $.ajax({ url: '<%= Model.UrlGetData %>?filterText=' + filter + '&page=' + page + '&pageSize=' + pagesize + extra + '<%=usemode %><%= fk %><%=overrideModule %>',
            success: function (data) {
                _results<%= Model.UrlGetData %> = data;
                
            },
            cache:false,
            dataType: 'html',
            async: true
        })


    }

    <% } %>
    var _urlGet<%=Model.IdTab %> = null;
    var _urlCount<%=Model.IdTab %> = null;
<% if (string.IsNullOrEmpty(Model.IdTab )) { %>
    var viewen_extern_int_<%=Model.IdTab %> = null;
<% } %>
    //var integrated_def_<%=Model.IdTab %> = null;
    function getInfoIntegrationWithThis<%=Model.IdTab %>(data) {
        for (var i = 0; i < _results<%=Model.IdTab %>.length; i++) {
            if (data != null ){
                var integratedFinded = data.Items.filter(function(obj) { return obj.Name ==  _results<%=Model.IdTab %>[i].IntegrationID });
                if (integratedFinded.length > 0){
                    $('tr.itemData', $("#tableSearchresult<%=Model.IdTab %>")).eq(i).find("td.integrationMark").each(function () {
                            $(this).append("<div class='dropdown'><a class='dropdown-toggle btn-mini btn btn-primary' role='button' id='int-dd-" + i + "' data-toggle='dropdown'  href='#'><i class='icon-resize-small icon-white' title='Integrado al catálogo actual'></i></a><ul class='dropdown-menu' role='menu' aria-labelledby='int-dd-" + i + "'><li role='presentation'><a href='#' class='lnk-Int-Details' integrationid='" + _results<%=Model.IdTab %>[i].IntegrationID + "' ><i class=' icon-resize-full'></i> Desintegrar del catálogo actual</a></li></ul></div>");
                    
                    });
                }else{
                    $('tr.itemData', $("#tableSearchresult<%=Model.IdTab %>")).eq(i).find("td.integrationMark").each(function () {
                            $(this).append("<div class='dropdown'><a class='dropdown-toggle btn-mini btn' role='button' id='int-dd-" + i + "' data-toggle='dropdown'  href='#'><i class=' icon-resize-full' title='No integrado al catálogo actual'></i></a><ul class='dropdown-menu' role='menu' aria-labelledby='int-dd-" + i + "'><li role='presentation'><a href='#' class='lnk-Int-Add' intdef='' idother='" + _results<%=Model.IdTab %>[i].SafeKey + "' ><i class=' icon-resize-small'></i> Integrar a un registro existente del catálogo actual</a></li></ul></div>");
                    });
                }
            }else{
                if (_results<%=Model.IdTab %>[i].IntegrationID != null ){
                     $('tr.itemData', $("#tableSearchresult<%=Model.IdTab %>")).eq(i).find("td.integrationMark").each(function () {
                            $(this).append("<div class='dropdown'><a class='dropdown-toggle btn-mini btn btn-primary' role='button' id='int-dd-" + i + "' data-toggle='dropdown'  href='#'><i class='icon-resize-small icon-white' title='Integrado a otro registro'></i></a><ul class='dropdown-menu' role='menu' aria-labelledby='int-dd-" + i + "'><li role='presentation'><a href='#' class='lnk-Int-Details' integrationid='" + _results<%=Model.IdTab %>[i].IntegrationID + "' ><i class=' icon-resize-full'></i> Desintegrar del catálogo actual</a></li></ul></div>");
                    
                    });
                }/*else{
                    $('tr.itemData', $("#tableSearchresult<%=Model.IdTab %>")).eq(i).find("td.integrationMark").each(function () {
                            $(this).append("<div class='dropdown'><a class='dropdown-toggle btn-mini btn' role='button' id='int-dd-" + i + "' data-toggle='dropdown'  href='#'><i class=' icon-resize-full' title='No integrado al catálogo actual'></i></a><ul class='dropdown-menu' role='menu' aria-labelledby='int-dd-" + i + "'><li role='presentation'><a href='#' class='lnk-Int-Add' intdef='' idother='" + _results<%=Model.IdTab %>[i].SafeKey + "' ><i class=' icon-resize-small'></i> Integrar a un registro existente del catálogo actual</a></li></ul></div>");
                    });
                }*/
            }
           

        }
        $('#tableSearchresult<%=Model.IdTab %> .dropdown-toggle').dropdown();
        prepareOpenDetailsIntegration<%=Model.IdTab %>();
    }
    var intAddResult<%=Model.IdTab %> = null;
    function prepareOpenDetailsIntegration<%=Model.IdTab %>(){
        $("#tableSearchresult<%=Model.IdTab %> .lnk-Int-Details").click(function (e) {
            var url = "<%=SFSdotNet.Framework.Web.Urls.GetUrlForAction("~/") %>SFSdotNetFrameworkSecurity/secSyncIntegrators/DetailsViewGen/" + $(this).attr("integrationid") + "?popup=1&dec=true";
              
            e.preventDefault();
            //waitActionComplete("EditDone");
            openModal($("<a href='" + url + "'></a>"), function(){ refreshList<%=Model.IdTab %>(); });  
        });
       
        $("#tableSearchresult<%=Model.IdTab %> .lnk-Int-Add").click(function (e) {
            var  url = "<%=SFSdotNet.Framework.Web.Urls.GetUrlForAction("~/") %><%=this.Request.RequestContext.RouteData.DataTokens["area"] %>/<%=this.Request.RequestContext.RouteData.Values["controller"] %>/ListViewGen/?idTab=Int2Current&fk=&fkValue=&popup=1&isLookUp=true&forSelect=1&propReturn=intAddResult<%=Model.IdTab %>&dialogId=modal_intAddResult<%=Model.IdTab %>";
            var intDef = "";
            if (typeof(integrated_def_<%=Model.IdTab %>) != "undefined"){
                intDef = integrated_def_<%=Model.IdTab %>;
            }else{
                $("#integrationLinks<%=Model.IdTab %>").closest(".dropdown").find(".lnk_integrated").each(function() { 
                    if ($(this).attr("int-module") == "<%=Model.ModuleKey %>" && $(this).attr("int-entname") == "<%=Model.EntityName %>"){
                        intDef = $(this).attr("int-id");
                    }
                });
            }
             var idOther = $(this).attr("idother");
            e.preventDefault();
            //waitActionComplete("EditDone");
            intAddResult<%=Model.IdTab %> = null;
            openModal($("<a popupId='modal_intAddResult<%=Model.IdTab %>' href='" + url + "'></a>"), function(){ 
                if (intAddResult<%=Model.IdTab %> != null ){
                    callServerGet("<%=SFSdotNet.Framework.Web.Urls.GetUrlForAction("~/") %>Features/SetIntegrationTwoItems?currentModule=<%=Model.ModuleKey %>&currentEntity=<%=Model.EntityName %>&currentId=" + intAddResult<%=Model.IdTab %>.Id + "&intDef=" + intDef + "&otherId=" + idOther,
                    function(data) { 
                        refreshList<%=Model.IdTab %>(); 
                    
                    });
                }
            
            });  
        });
    }
    function addIntegratedSettingData<%=Model.IdTab %>(){
        if (typeof(viewen_extern_int_<%=Model.IdTab %>) != "undefined" && viewen_extern_int_<%=Model.IdTab %> == true){
            $(".principal-cel-row.<%=Model.IdTab %>list-details").each(function() {
                $(this).attr("href", $(this).attr("href").replace("<%=Model.ModuleKey%>", current_module).replace("<%=SFSdotNet.Framework.Web.Mvc.Utils.GetRouteDataOrQueryParam(this.Request.RequestContext, "controller") %>",current_entityset) + "&intDef=" + integrated_def_<%=Model.IdTab %>);  
            });

             var urlGetInfo  = "<%=SFSdotNet.Framework.Web.Urls.GetUrlForAction("~/")%>Features/GetIntegratedInfoWithCurrent?currentEntity=<%=Model.EntityName %>&currentModule=<%=Model.ModuleKey %>&entity=" + viewen_extern_int_entity<%=Model.IdTab %> + "&module=" + viewen_extern_int_module<%=Model.IdTab %>;
            //_results<%=Model.IdTab %>
            otherItemsArray = [];
            for (var i = 0; i < _results<%=Model.IdTab %>.length; i++) {
                if (_results<%=Model.IdTab %>[i].IntegrationID != null ){
                    otherItemsArray.push(_results<%=Model.IdTab %>[i].IntegrationID);
                }
            }
            if (otherItemsArray.length > 0){
            }else{
            }
                var itemsOther = { itemsOther: otherItemsArray.join("|").toString() };
                callServerSend(urlGetInfo, itemsOther,  getInfoIntegrationWithThis<%=Model.IdTab %>);
   
        }else{
            getInfoIntegrationWithThis<%=Model.IdTab %>(null);
        }
    }
    function countResults<%=Model.IdTab %>(filter) {
        var extraParams = "";
        if (typeof(extraParamsList<%=Model.IdTab %>) != "undefined" && extraParamsList<%=Model.IdTab %>.length > 0){
            extraParams = "&params=" + extraParamsList<%=Model.IdTab %>;
        }
        $.ajax(
            { url:_urlCount<%=Model.IdTab %> + "?filter=" + filter + '<%=usemode %><%=fk %><%=overrideModule %>' + extraParams,
                success: function (data) {
                    _totalResults = data;
                     var optInit = getOptionsFromForm<%=Model.IdTab %>();
                     
                     $(".pagination<%=Model.IdTab %>").pagination(_totalResults, optInit);
                },
                cache:false,
                async: true
            }
            );

    }

    function SortBy<%=Model.IdTab %>(propertyOrderBy, propertyName, element, e){
        e.preventDefault();
        var orderDir ="asc";
        if( $(element).attr("orderDir") != null){
            if ($(element).attr("orderDir") == "asc"){
                orderDir = "desc";
                $(element).attr("orderDir", "desc");
            }else{
                 orderDir = "asc";
                $(element).attr("orderDir", "asc");
            }
        }else{
            $(element).attr("orderDir", "asc")
        }
        if (orderDir == "asc")
            currentOrderIco<%=Model.IdTab %> = "&darr;";
        else
            currentOrderIco<%=Model.IdTab %> = "&uarr;";

//        //getResults(1);
        var optInit = getOptionsFromForm<%=Model.IdTab %>();
        currentOrderBy<%=Model.IdTab %> = propertyOrderBy;
        currentOrderDir<%=Model.IdTab %> = orderDir;
        //$(".pagination<%=Model.IdTab %>").pagination(_totalResults, optInit);
        refreshList<%=Model.IdTab %>();
        //countResults<%=Model.IdTab %>("<%= Url.Encode(Model.Filter) %>"+"|"+searchText<%=Model.IdTab %>);
        refreshForms();
        $(".icoSort<%=Model.IdTab %>").html("");
        $("#icoSort" + propertyName + "<%=Model.IdTab %>").html(currentOrderIco<%=Model.IdTab %>);
        }
    var currentOrderBy<%=Model.IdTab %> = "<%=Model.SortBy %>";
    var searchText<%=Model.IdTab %> = "";
    var currentOrderDir<%=Model.IdTab %> = "<%=Model.SortDirection %>";
    function getOptionsFromForm<%=Model.IdTab %>() {
        var opt = { callback: pageselectCallback<%=Model.IdTab %> };
        
        opt["items_per_page"] = <%=Model.PageSize %>;
        opt["num_display_entries"] = 3;
        opt["num_edge_entries"] = 2;
        opt["prev_text"] = "Anterior";
        opt["next_text"] = "Siguiente";
        opt["orderBy"] =currentOrderBy<%=Model.IdTab %>;
        opt["orderDir"] = currentOrderDir<%=Model.IdTab %>;
       // opt["current_page"] = 1;
        // Avoid html injections in this demo
        var htmlspecialchars = { "&": "&amp;", "<": "&lt;", ">": "&gt;", '"': "&quot;" }
        $.each(htmlspecialchars, function (k, v) {
            opt.prev_text = opt.prev_text.replace(k, v);
            opt.next_text = opt.next_text.replace(k, v);
        })
        return opt;
    }       
       
    var queryB<%=Model.IdTab %> = "";
    var fullQueryList<%=Model.IdTab %> = "";
    
    function refreshList<%=Model.IdTab %>(customFilter) {

        var filterview = "";
        if (typeof(usingSavedFilter<%: ViewData["idTab"] %>) != 'undefined'){
            if (usingSavedFilter<%: ViewData["idTab"] %> == false){
                queryB<%=Model.IdTab %> = "" + escape(GetFilter('filterT<%:ViewData["idTab"] %>'));
                if (queryB<%=Model.IdTab %>.length > 0){
                    queryB<%=Model.IdTab %> = "bs~" + queryB<%=Model.IdTab %>;
                }
            }
        }
         filterview = $(".currentFilterview").attr("query");

        if (typeof(customFilter) != "undefined"){
            if (queryB<%=Model.IdTab%>.length > 0){
                            queryB<%=Model.IdTab %> = queryB<%=Model.IdTab %> + ";cf~" + customFilter ;
            }else{
                            queryB<%=Model.IdTab %> = "cf~" + customFilter ;
            
                }
        }
            if (typeof(filterview) != "undefined")
            {
                if (filterview != null ){
                    if (filterview.length > 0){
                        if (queryB<%=Model.IdTab%>.length > 0)
                            queryB<%=Model.IdTab %> = queryB<%=Model.IdTab %> + ";sk~" + filterview ;
                        else
                            queryB<%=Model.IdTab %> = "sk~" + filterview ;
                    }
                }
            }

        if (typeof(onList<%=Model.IdTab %>Binding) != "undefined"){
            onList<%=Model.IdTab %>Binding();
        }
        if (_urlGet<%=Model.IdTab %> == null){
            _urlGet<%=Model.IdTab %> = "<%= Model.JsonUrlGetData %>";
        }
        if (_urlCount<%=Model.IdTab %> == null){
            _urlCount<%=Model.IdTab %> = "<%= Model.UrlGetCount %>";
        }
        $("#resultsAll<%=Model.IdTab    %>").css("position", "relative");
        //$("#resultsAll<%=Model.IdTab  %>").block({overlayCSS:  {backgroundColor: 'transparent'},baseZ:2000, message: '<h1><img alt="" src="<%=ResolveUrl("~/") %>Content/ajax-loader.gif" /> <%: GlobalMessages.PROCESSING_PLEASE_WAIT  %></h1>',  css: { border: '3px solid #a00' } });
        var staticFilter<%=Model.IdTab %> = '<%= Url.Encode(Model.Filter) %>';
        var sepFF<%=Model.IdTab %> = "";
        if (staticFilter<%=Model.IdTab %>.length > 0 && queryB<%=Model.IdTab %>.length > 0)
            sepFF<%=Model.IdTab %> = ";";
        fullQueryList<%=Model.IdTab %> = queryB<%=Model.IdTab %> + sepFF<%=Model.IdTab %> + staticFilter<%=Model.IdTab %> + '|'+ encodeURIComponent(searchText<%=Model.IdTab %>); 
        countResults<%=Model.IdTab %>(fullQueryList<%=Model.IdTab %>);
          

       if (typeof(ShowSummaryFooterList<%=Model.IdTab %>) != "undefined"){
            ShowSummaryFooterList<%=Model.IdTab %>( queryB<%=Model.IdTab %> + sepFF<%=Model.IdTab %> + staticFilter<%=Model.IdTab %> + '|'+ encodeURIComponent(searchText<%=Model.IdTab %>) );
       }
    }

    $(document).ready(function () {

    <% bool pal = false;
        if(!string.IsNullOrEmpty(Request.QueryString["pal"])) { 
            pal = Convert.ToBoolean(Request.QueryString["pal"]);
        }
        if (pal ==false) {%>
            refreshList<%=Model.IdTab %>();
       <%} %>
        refreshForms();

    });
<%="</script>" %>

