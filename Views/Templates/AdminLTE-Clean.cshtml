@using SFSdotNet.Framework.Web.Mvc
@{

    TemplateData ui = SFSdotNet.Framework.Web.Mvc.UIApp.GetUIData(this.ViewContext);
    string urlImageProfile = ui.GetUrlImageProfileUser(160, 160);

    string changelang = null;
    if (this.Request.Cookies["ASP.NET_SessionId"] != null)
    {
        var lang_url = SFSdotNet.Framework.Cache.Caching.GetFromGlobal(this.Request.Cookies["ASP.NET_SessionId"].Value + "lang-url");
        if (lang_url != null)
        {
            changelang = lang_url.ToString();
            SFSdotNet.Framework.Cache.Caching.RemoveInGlobal(this.Request.Cookies["ASP.NET_SessionId"].Value + "lang-url");
        }
    }

    if (!string.IsNullOrEmpty(Request.QueryString["lang"]))
    {
        if (Request.QueryString["lang"] != System.Threading.Thread.CurrentThread.CurrentCulture.ToString())
        {
            changelang = Request.QueryString["lang"];
        }
    }
    else if (Session["lang-url"] != null)
    {
        changelang = Session["lang-url"].ToString();
        Session["lang-url"] = null;

    }

}
<!DOCTYPE html>
<html>
<head>
    <meta charset="UTF-8">
    <title>@RenderSection("Title", false)</title>

    <!--AX872-->
    @{
        string area = SFSdotNet.Framework.Web.Mvc.Utils.GetRouteDataOrQueryParam(this.Request.RequestContext, "area");
        UIModel uiModel = (UIModel)ViewData["uiModel"];
        bool isDetailsOrEdit = false;
        bool hideBrand = false;
        SFSdotNet.Framework.Security.BusinessObjects.secCompanyModule companyModule = SFSdotNet.Framework.Web.Utils.GetDomainCompany(this.ViewContext.HttpContext);
        SFSdotNet.Framework.Security.BusinessObjects.secCompany companyDomain = null;
        if (companyModule != null && companyModule.secCompany != null)
        {
            companyDomain = companyModule.secCompany;
        }

        if (SFSdotNet.Framework.My.Context.CurrentContext != null && SFSdotNet.Framework.My.Context.CurrentContext.Company != null && SFSdotNet.Framework.My.Context.CurrentContext.Company.HidePlatformBrand != null)
        {
            hideBrand = SFSdotNet.Framework.My.Context.CurrentContext.Company.HidePlatformBrand.Value;
        }
        else if (companyDomain != null && companyDomain.HidePlatformBrand != null)
        {
            hideBrand = companyDomain.HidePlatformBrand.Value;
        }else if (companyDomain == null)
        {
            var module = SFSdotNet.Framework.Cache.Caching.SystemObjects.GetModuleByKey(area);
            if (module != null && module.HidePlatformBrand != null)
            {
                hideBrand = module.HidePlatformBrand.Value;
            }
        }
        if (uiModel != null && (uiModel.ContextType == UIModelContextTypes.DisplayForm || uiModel.ContextType == UIModelContextTypes.EditForm))
        {
            isDetailsOrEdit = true;
        }

    }



    <link rel="icon"
          type="image/png"
          href="@(ui.UrlFavicon)">

    <!-- Tell the browser to be responsive to screen width -->
    <meta content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no" name="viewport">
    <!-- Bootstrap 3.3.4 -->
    <link href="@(ui.UrlStatic("~/Static/Templates/AdminLTE/bootstrap/css/bootstrap.min.css"))" rel="stylesheet" type="text/css" />
    <!-- Font Awesome Icons -->
    <link href="//maxcdn.bootstrapcdn.com/font-awesome/4.3.0/css/font-awesome.min.css" rel="stylesheet" type="text/css" />
    <!-- Ionicons -->
    <link href="//code.ionicframework.com/ionicons/2.0.1/css/ionicons.min.css" rel="stylesheet" type="text/css" />
    <!-- Theme style -->
    <link href="@(ui.UrlStatic("~/Static/Templates/AdminLTE/css/AdminLTE.min.css"))" rel="stylesheet" type="text/css" />
    <!-- AdminLTE Skins. Choose a skin from the css/skins
         folder instead of downloading all of them to reduce the load. -->
    <link href="@(ui.UrlStatic("~/Static/Templates/AdminLTE/css/skins/_all-skins.min.css"))" rel="stylesheet" type="text/css" />

    @*<link href="@(ui.UrlStatic("~/Scripts/select2/select2.css"))" rel="stylesheet">
    <link href="@(ui.UrlStatic("~/Scripts/select2/select2-bootstrap.css"))" rel="stylesheet">*@

    <link href="@(ui.UrlStatic("~/Static/v2/bootstrap-modal-bs3patch.css"))" rel="stylesheet" />
    <link href="@(ui.UrlStatic("~/Static/v2/bootstrap-modal.css"))" rel="stylesheet" />

    <!-- HTML5 Shim and Respond.js IE8 support of HTML5 elements and media queries -->
    <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->
    <!--[if lt IE 9]>
        <script src="https://oss.maxcdn.com/html5shiv/3.7.2/html5shiv.min.js"></script>
        <script src="https://oss.maxcdn.com/respond/1.4.2/respond.min.js"></script>
    <![endif]-->
    

    <!-- jQuery 2.1.4 -->
    <script src="@(ui.UrlStatic("~/Static/Templates/AdminLTE/plugins/jQuery/jQuery-2.1.4.min.js"))" type="text/javascript"></script>
    <!-- Bootstrap 3.3.2 JS -->
    <script src="@(ui.UrlStatic("~/Static/Templates/AdminLTE/bootstrap/js/bootstrap.min.js"))" type="text/javascript"></script>
    <!-- SlimScroll -->
    <script src="@(ui.UrlStatic("~/Static/Templates/AdminLTE/plugins/slimScroll/jquery.slimscroll.min.js"))" type="text/javascript"></script>
  
      <!-- FastClick -->
    @*<script src="@(ui.UrlStatic("~/Static/Templates/AdminLTE/plugins/fastclick/fastclick.min.js"))" type="text/javascript"></script>*@
    <!-- AdminLTE App -->
    <link href="@(ui.UrlStatic("~/Static/Templates/AdminLTE/plugins/iCheck/all.css"))" rel="stylesheet" type="text/css" />
    <script src="@(ui.UrlStatic("~/Static/Templates/AdminLTE/plugins/iCheck/icheck.min.js"))"></script>
    <link href="@(ui.UrlStatic("~/Static/Templates/AdminLTE/plugins/pace/pace.min.css"))" rel="stylesheet" type="text/css" />
    
    <script>
        //var overlay = $('<div class="overlay"><div class="fa fa-refresh fa-spin"></div></div>');
      
        paceOptions = {
            ajax: { ignoreURLs: ['_nai_', 'GetLatests', 'GetPendingProcess', 'Messages'] }
        };
   
    </script>
     <script  src="@(ui.UrlStatic("~/Static/Templates/AdminLTE/plugins/pace/pace.js"))"></script>
    
    <link href="@(ui.UrlStatic("~/Static/Templates/AdminLTE/plugins/colorpicker/bootstrap-colorpicker.css"))" rel="stylesheet" type="text/css" />
    
    <link href="@(ui.UrlStatic("~/Static/v2/datepicker/css/bootstrap-datepicker3.css"))" rel="stylesheet" type="text/css" />
    <link href="@(ui.UrlStatic("~/Static/v2/datetimepicker/css/bootstrap-datetimepicker.css"))" rel="stylesheet" type="text/css" />
    <script src="@(ui.UrlStatic("~/Static/v2/moment/moment.min.js"))"></script>
    <script src="@(ui.UrlStatic("~/Static/v2/datepicker/js/bootstrap-datepicker.js"))"></script>

    <script src="@(ui.UrlStatic("~/Static/Templates/AdminLTE/js/app.js"))" type="text/javascript"></script>
    <!-- AdminLTE for demo purposes -->
     
    <script src="@(ui.UrlStatic("~/Static/Templates/AdminLTE/js/demo.js"))" type="text/javascript"></script>

    <script src="@(ui.UrlStatic("~/Static/v2/bootstrap-modalmanager.js"))"></script>
    <script src="@(ui.UrlStatic("~/Static/v2/bootstrap-modal.js"))"></script>
    <script src="@(ui.UrlStatic("~/Scripts/jquery.unobtrusive-ajax.min.js"))"></script>
    <script src="@(ui.UrlStatic("~/Scripts/jquery.validate.js"))"></script>
    <script src="@(ui.UrlStatic("~/Scripts/jquery.validate.unobtrusive.js"))"></script>
    <script src="@(ui.UrlStatic("~/Scripts/Jquery.Numeric.js"))"></script>
    <script src="@(ui.UrlStatic("~/Scripts/jquery.pagination.js"))"></script>
    <script src="@(ui.UrlStatic("~/Scripts/jquery.tablehover.min.js"))"></script>
    <script src="@(ui.UrlStatic("~/Scripts/jsrender.js"))"></script>
    <script src="@(ui.UrlStatic("~/Scripts/timeago.js"))"></script>


    <link href="@(ui.UrlStatic("~/Content/jquery.pnotify.default.css"))" rel="stylesheet" type="text/css" />
    <link href="@(ui.UrlStatic("~/Content/jquery.pnotify.default.icons.css"))" rel="stylesheet" type="text/css" />

    <script src="@(ui.UrlStatic("~/Scripts/jquery.pnotify.min.js"))"></script>
    <link href="@(ui.UrlStatic("~/Static/v2/magnificPopup/magnific-popup.css"))" rel="stylesheet" type="text/css" />

    <link href="@(ui.UrlStatic("~/Static/Templates/AdminLTE/css/custom.css"))" rel="stylesheet" type="text/css" />
    
    <script type='text/javascript' src='@(ui.UrlStatic("~/Static/v2/unitegallery/js/unitegallery.min.js"))'></script>
    <link rel='stylesheet' href='@(ui.UrlStatic("~/Static/v2/unitegallery/css/unite-gallery.css"))' type='text/css' />
    <script type='text/javascript' src='@(ui.UrlStatic("~/Static/v2/unitegallery/themes/tiles/ug-theme-tiles.js"))'></script>
    @*<link rel='stylesheet' href='@(ui.UrlStatic("~/Static/v2/unitegallery/themes/default/ug-theme-default.css"))' type='text/css' />*@



    <script src="@(ui.UrlStatic("~/Scripts/SFS.Web.Mvc.js"))"></script>


    <script>

             @Html.Raw(ui.RenderJavascriptStart())
    </script>
    @if (!string.IsNullOrEmpty(ui.CssCustom))
    {
        <style>
      @Html.Raw(ui.CssCustom)
        </style>
    }

            @RenderSection("CustomScript", false)
   
    @{
        #region colors
        bool customColors = false;
        string customColorPrimary = null;


        if (!string.IsNullOrEmpty(area) && ((Request.IsAuthenticated == true) && SFSdotNet.Framework.My.Context.CurrentContext != null && SFSdotNet.Framework.My.Context.CurrentContext.Company != null) || companyDomain != null)
        {
            SFSdotNet.Framework.Security.BusinessObjects.secCompany company = null;

            if (companyDomain != null)
            {
                company = companyDomain;
            }
            if (company == null && SFSdotNet.Framework.My.Context.CurrentContext != null && SFSdotNet.Framework.My.Context.CurrentContext.Company != null)
            {
                company = SFSdotNet.Framework.My.Context.CurrentContext.Company;
            }
            var customColorObj = SFSdotNet.Framework.Cache.Caching.GetFromCompany("custom-color-primary", company.GuidCompany);
            if (customColorObj != null && (bool)customColorObj == true)
            {
                var colorPrimary = SFSdotNet.Framework.Cache.Caching.GetFromCompany("color-primary", company.GuidCompany);
                if (colorPrimary != null)
                {
                    customColorPrimary = colorPrimary.ToString();
                }

            }
            else {
                // Guid guidCompany = SFSdotNet.Framework.My.Context.CurrentContext.Company.GuidCompany;
                if (company == null)
                {
                    company = SFSdotNet.Framework.My.Context.CurrentContext.Company; // SFSdotNet.Framework.Security.BR.secCompaniesBR.Instance.GetBy("GuidCompany == Guid(\"" + guidCompany.ToString() + "\")").FirstOrDefault();
                }
                Guid? guidCompany = null;
                if (company != null)
                {
                    guidCompany = company.GuidCompany;

                }
                else
                {

                }

                if (company != null && !string.IsNullOrEmpty(company.ColorPrimary))
                {
                    SFSdotNet.Framework.Cache.Caching.SetToCompany(true, "custom-color-primary", guidCompany.Value);
                    customColorPrimary = company.ColorPrimary;
                    SFSdotNet.Framework.Cache.Caching.SetToCompany(company.ColorPrimary, "color-primary", guidCompany.Value);
                }
                else {
                    SFSdotNet.Framework.Cache.Caching.SetToCompany(false, "custom-color-primary", guidCompany.Value);
                }
            }

        }

        #endregion
     
        string bodyClasses = "skin-blue";
            }
            @if (ui.UITheme != null)
    {
                bodyClasses = "skin-custom";
        <text>
            <style>
            /*
 * Skin: custom
 * -----------
 */
.skin-custom .main-header .navbar {
                    background-color: @(ui.UITheme.TopMenuBG);
                }
.skin-custom .main-header .navbar .nav > li > a {
                    color: #ffffff;
}
.skin-custom .main-header .navbar .nav > li > a:hover,
.skin-custom .main-header .navbar .nav > li > a:active,
.skin-custom .main-header .navbar .nav > li > a:focus,
.skin-custom .main-header .navbar .nav .open > a,
.skin-custom .main-header .navbar .nav .open > a:hover,
.skin-custom .main-header .navbar .nav .open > a:focus,
.skin-custom .main-header .navbar .nav > .active > a {
                    background: rgba(0, 0, 0, 0.1);
                    color: #f6f6f6;
}
.skin-custom .main-header .navbar .sidebar-toggle {
                    color: #ffffff;
}
.skin-custom .main-header .navbar .sidebar-toggle:hover {
                    color: #f6f6f6;
  background: rgba(0, 0, 0, 0.1);
                }
.skin-custom .main-header .navbar .sidebar-toggle {
                    color: #fff;
}
.skin-custom .main-header .navbar .sidebar-toggle:hover {
                    background-color: @(ui.UITheme.TopMenuBG);
                }
                @Html.Raw("@")media (max-width: 767px) {
  .skin-custom .main-header .navbar .dropdown-menu li.divider {
                        background-color: rgba(255, 255, 255, 0.1);
                    }
  .skin-custom .main-header .navbar .dropdown-menu li a {
                        color: #fff;
  }
  .skin-custom .main-header .navbar .dropdown-menu li a:hover {
                        background: #008d4c;
  }
                }
.skin-custom .main-header .logo {
                    background-color: @(ui.UITheme.TopCompanyLogoBG);
                    color: #ffffff;
  border-bottom: 0 solid transparent;
                }
.skin-custom .main-header .logo:hover {
                    background-color: @(ui.UITheme.TopCompanyLogoBG);
                }
.skin-custom .main-header li.user-header {
                    background-color: @(ui.UITheme.TopMenuBG);
                }
.skin-custom .content-header {
                    background: transparent;
                }
.skin-custom .wrapper,
.skin-custom .main-sidebar,
.skin-custom .left-side {
                    background-color: #222d32;
}
.skin-custom .user-panel > .info,
.skin-custom .user-panel > .info > a {
                    color: #fff;
}
.skin-custom .sidebar-menu > li.header {
                    color: #4b646f;
  background: #1a2226;
}
.skin-custom .sidebar-menu > li > a {
                    border-left: 3px solid transparent;
                }
.skin-custom .sidebar-menu > li:hover > a,
.skin-custom .sidebar-menu > li.active > a {
                    color: #ffffff;
  background: #1e282c;
  border-left-color: @(ui.UITheme.TopMenuBG);
                }
.skin-custom .sidebar-menu > li > .treeview-menu {
                    margin: 0 1px;
                    background: #2c3b41;
}
.skin-custom .sidebar a {
                    color: #b8c7ce;
}
.skin-custom .sidebar a:hover {
                    text-decoration: none;
                }
.skin-custom .treeview-menu > li > a {
                    color: #8aa4af;
}
.skin-custom .treeview-menu > li.active > a,
.skin-custom .treeview-menu > li > a:hover {
                    color: #ffffff;
}
.skin-custom .sidebar-form {
                    border-radius: 3px;
                    border: 1px solid #374850;
  margin: 10px 10px;
                }
.skin-custom .sidebar-form input[type="text"],
.skin-custom .sidebar-form .btn {
                    box-shadow: none;
                    background-color: #374850;
  border: 1px solid transparent;
                    height: 35px;
                    -webkit-transition: all 0.3s ease-in-out;
                    -o-transition: all 0.3s ease-in-out;
                    transition: all 0.3s ease-in-out;
                }
.skin-custom .sidebar-form input[type="text"] {
                    color: #666;
  border-top-left-radius: 2px;
                    border-top-right-radius: 0;
                    border-bottom-right-radius: 0;
                    border-bottom-left-radius: 2px;
                }
.skin-custom .sidebar-form input[type="text"]:focus,
.skin-custom .sidebar-form input[type="text"]:focus + .input-group-btn .btn {
                    background-color: #fff;
  color: #666;
}
.skin-custom .sidebar-form input[type="text"]:focus + .input-group-btn .btn {
                    border-left-color: #fff;
}
.skin-custom .sidebar-form .btn {
                    color: #999;
  border-top-left-radius: 0;
                    border-top-right-radius: 2px;
                    border-bottom-right-radius: 2px;
                    border-bottom-left-radius: 0;
                }
.nav-tabs-custom > .nav-tabs > li.active {
                    border-top-color: @(ui.UITheme.TopMenuBG);
                }
.btn-primary{
                    background-color: @(ui.UITheme.PrimaryButtonsBG);
                    border-color:@(ui.UITheme.PrimaryButtonsBG);
                }
.btn-primary:hover, .btn-primary:active, .btn-primary.hover{
                    background-color: @(ui.UITheme.PrimaryButtonsBG);

                }
.btn-primary.focus, .btn-primary:focus, .btn-primary.active, .btn-primary:active{
                    background-color: @(ui.UITheme.PrimaryButtonsBG);
                    border-color:@(ui.UITheme.PrimaryButtonsBG);
                }
                td.select.hover, tr.sover td.select{

                    border-left-style: solid;
                    border-left-width: 2px;
                    border-left-color: @(ui.UITheme.TopMenuBG);
                }

            </style>

        </text>
               
            }

    @if (ViewData["HeaderScript"] != null)
    {
        @Html.Raw(ViewData["HeaderScript"].ToString());
    }

<style>
    .box{
    border:0px;
    box-shadow:none;

}
.box-body{
    border:0px;
}
.display-field{
    border:0px;

}
</style>
</head>
@{

    if (!string.IsNullOrEmpty(ui.BodyClasses))
    {
        bodyClasses = ui.BodyClasses;
    }

    object collapsedClass = SFSdotNet.Framework.Cache.UserSession.Get(System.Web.HttpContext.Current, "collapsed-menu");
    string collapsedClassText = "";
    bool isLoginOrRegister = false;
    string actionName = SFSdotNet.Framework.Web.Mvc.Utils.GetRouteDataOrQueryParam(this.Request.RequestContext, "action");
    if (actionName == "Login")
    {
        isLoginOrRegister = true;
    }
    if (collapsedClass != null && collapsedClass.ToString() == "1")
    {
        collapsedClassText = "sidebar-collapse";
    }else
    {
        collapsedClassText = "";
    }
    string wrapper = "";
    string contentwrapper = "";
    if (isLoginOrRegister == false)
    {
        wrapper = "wrapper-clean";
        contentwrapper = "content-wrapper-clean";
    }else
    {
        wrapper = "login-box";
    }
    if (ViewData["class-body"] != null)
    {
        bodyClasses = bodyClasses +" " + ViewData["class-body"].ToString() + " ";
    }
    string _bodyclasses = bodyClasses+  " fixed " +collapsedClassText;
    if (isLoginOrRegister  == true)
    {
        _bodyclasses = "hold-transition login-page";
    }
            }
<body class="@(_bodyclasses)">
    <!-- Site wrapper -->
    <div class="@(wrapper)">
  
     
        <div class="@(contentwrapper)">
            @RenderBody()
        
        </div><!-- /.content-wrapper -->
 
    </div><!-- ./wrapper -->
   
    @if (ViewData["FooterScript"] != null)
    {
        @Html.Raw(ViewData["FooterScript"].ToString());
    }
</body>
</html>
